{
	"root": true, // Make sure eslint picks up the config at the root of the directory
	"parserOptions": {
		"ecmaVersion": 2021, // Use the latest ecmascript standard
		"sourceType": "module", // Allows using import/export statements
		"ecmaFeatures": {
			"jsx": true // Enable JSX since we"re using React
		},
		"project": ["./tsconfig.json"],
		"projectFolderIgnoreList": []
	},
	"settings": {
		"react": {
			"version": "detect" // Automatically detect the react version
		}
	},
	"env": {
		"es2021": true,
		"browser": true, // Enables browser globals like window and document
		"node": true, // Enables Node.js global variables and Node.js scoping.
		"jest/globals": true
	},
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"react",
		"react-hooks",
		"@typescript-eslint",
		"prettier",
		"eslint-plugin-import-helpers",
		"import",
		"jsx-a11y",
		"jest"
	],
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:@next/next/recommended",
		// Uncomment the following lines to enable eslint-config-prettier
		// Is not enabled right now to avoid issues with the Next.js repo
		// "prettier",
		"plugin:prettier/recommended",
		"plugin:jest/recommended"
	],

	"rules": {
		"comma-dangle": ["error", "never"],
		"prettier/prettier": ["error", {}, { "usePrettierrc": true }],
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "off",
		"react/react-in-jsx-scope": "off",
		"jsx-a11y/href-no-hash": "off",
		"jsx-a11y/anchor-is-valid": [
			"error",
			{
				"components": ["Link"],
				"specialLink": ["hrefLeft", "hrefRight"],
				"aspects": ["invalidHref", "preferButton"]
			}
		],
		"react/display-name": 0,
		"react/prop-types": "off",
		"require-await": "off",
		"@typescript-eslint/require-await": "off",
		"no-return-await": "warn",
		"@typescript-eslint/no-floating-promises": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/camelcase": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/explicit-function-return-type": 0,
		"@typescript-eslint/explicit-member-accessibility": 0,
		"@typescript-eslint/indent": 0,
		"@typescript-eslint/member-delimiter-style": 0,
		"@typescript-eslint/no-explicit-any": 0,
		"@typescript-eslint/no-var-requires": 0,
		"@typescript-eslint/no-use-before-define": 0,
		"@typescript-eslint/unbound-method": "off",

		"react/jsx-filename-extension": [
			2,
			{ "extensions": [".js", ".jsx", ".ts", ".tsx"] }
		],

		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"argsIgnorePattern": "^_"
			}
		],
		"no-console": [
			"warn",
			{
				"allow": ["warn", "error"]
			}
		],
		"import/no-duplicates": ["error", { "considerQueryString": true }],
		"import-helpers/order-imports": [
			"warn",
			{
				"newlinesBetween": "always", // new line between groups
				"groups": [
					"/^react/",
					"module",
					"/^@atom/",
					"/^@icons/",
					"/^@molecules/",
					"/^@organisms/",
					"/^@templates/",
					"/^@themes/",
					"/^@contexts/",
					"/^@utils/",
					["parent", "sibling", "index"]
				],
				"alphabetize": { "order": "asc", "ignoreCase": true }
			}
		],
		"jest/no-disabled-tests": "warn",
		"jest/no-focused-tests": "error",
		"jest/no-identical-title": "error",
		"jest/prefer-to-have-length": "warn",
		"jest/valid-expect": "error"
	}
}
